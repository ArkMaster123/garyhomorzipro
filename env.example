# =============================================================================
# GaryV2 - Gary Experience Platform Environment Variables
# =============================================================================
# Copy this file to .env.local and fill in your actual values
# Never commit .env.local to version control!

# =============================================================================
# CORE APPLICATION SETTINGS
# =============================================================================

# NextAuth.js Authentication Secret
# Generate a random secret: `openssl rand -base64 32`
AUTH_SECRET=your-super-secret-auth-key-here

# =============================================================================
# EMAIL CONFIGURATION (REQUIRED FOR PASSWORD RESET)
# =============================================================================
# Email server configuration for sending password reset emails
# You can use services like SendGrid, Mailgun, or SMTP

# Email Server Configuration
EMAIL_SERVER_HOST=smtp.gmail.com
EMAIL_SERVER_PORT=587
EMAIL_SERVER_USER=your-email@gmail.com
EMAIL_SERVER_PASSWORD=your-app-password

# Email From Address (must match EMAIL_SERVER_USER)
EMAIL_FROM=your-email@gmail.com

# Alternative: SendGrid Configuration
# EMAIL_SERVER_HOST=smtp.sendgrid.net
# EMAIL_SERVER_PORT=587
# EMAIL_SERVER_USER=apikey
# EMAIL_SERVER_PASSWORD=your-sendgrid-api-key
# EMAIL_FROM=noreply@yourdomain.com

# Application Environment
NODE_ENV=development

# =============================================================================
# AI GATEWAY CONFIGURATION (REQUIRED)
# =============================================================================
# The AI Gateway provides unified access to multiple AI model providers
# This is the primary way the app accesses AI models

# AI Gateway Base URL - Your gateway endpoint
AI_GATEWAY_BASE_URL=https://your-ai-gateway.com/v1

# AI Gateway API Key - Your authentication key for the gateway
AI_GATEWAY_API_KEY=your-ai-gateway-api-key-here

# =============================================================================
# DATABASE CONFIGURATION (REQUIRED)
# =============================================================================
# PostgreSQL database for storing chats, messages, documents, and user data

# Neon Serverless Postgres (Recommended)
POSTGRES_URL=postgresql://username:password@host:5432/database?sslmode=require

# Alternative: Local PostgreSQL
# POSTGRES_URL=postgresql://postgres:password@localhost:5432/garyhomorzipro

# =============================================================================
# REDIS CONFIGURATION (OPTIONAL BUT RECOMMENDED)
# =============================================================================
# Redis is used for session management and resumable streams
# Without Redis, some advanced features like stream resumption won't work

# Upstash Redis (Recommended for production)
REDIS_URL=redis://username:password@host:port

# Alternative: Local Redis
# REDIS_URL=redis://localhost:6379

# =============================================================================
# FILE STORAGE CONFIGURATION (OPTIONAL)
# =============================================================================
# Vercel Blob for file uploads and storage

# Vercel Blob Store Token
BLOB_READ_WRITE_TOKEN=vercel_blob_rw_token_here

# =============================================================================
# INDIVIDUAL AI PROVIDER KEYS (OPTIONAL)
# =============================================================================
# These are only needed if you want to use providers directly instead of through the gateway
# Most users should use the AI Gateway configuration above instead

# OpenAI
OPENAI_API_KEY=sk-your-openai-api-key-here

# Anthropic
ANTHROPIC_API_KEY=sk-ant-your-anthropic-api-key-here

# xAI (Grok)
XAI_API_KEY=xai-your-xai-api-key-here

# Groq
GROQ_API_KEY=gsk_your-groq-api-key-here

# Google AI
GOOGLE_GENERATIVE_AI_API_KEY=your-google-ai-api-key-here

# Mistral AI
MISTRAL_API_KEY=your-mistral-api-key-here

# Perplexity AI
PERPLEXITY_API_KEY=pplx-your-perplexity-api-key-here

# DeepSeek
DEEPSEEK_API_KEY=sk-your-deepseek-api-key-here

# Cohere
COHERE_API_KEY=your-cohere-api-key-here

# =============================================================================
# STRIPE PAYMENT CONFIGURATION (REQUIRED FOR SUBSCRIPTIONS)
# =============================================================================
# Stripe handles payment processing and subscription management
# Get these keys from your Stripe Dashboard: https://dashboard.stripe.com/

# Stripe Publishable Key (Public - safe to expose in client-side code)
NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key-here

# Stripe Secret Key (Private - keep this secure)
STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key-here

# Stripe Webhook Secret (for handling subscription events)
STRIPE_WEBHOOK_SECRET=whsec_your-stripe-webhook-secret-here

# Stripe Checkout URLs (configure these in your Stripe Dashboard)
NEXT_PUBLIC_BUY_SUBSCRIPTION_LINK=https://buy.stripe.com/your-checkout-link
NEXT_PUBLIC_MANAGE_SUBSCRIPTION_LINK=https://billing.stripe.com/p/login/your-portal-link

# =============================================================================
# SUBSCRIPTION LIMITS CONFIGURATION
# =============================================================================
# Define message limits for free and paid users

# Free user message limit per day
FREE_USER_MESSAGE_LIMIT=10

# Paid user message limit per day (set high for unlimited feel)
PAID_USER_MESSAGE_LIMIT=1000

# =============================================================================
# WEB SEARCH CONFIGURATION (OPTIONAL)
# =============================================================================

# Brave Search API Key - For web search functionality
BRAVE_SEARCH_API_KEY=your-brave-search-api-key-here

# =============================================================================
# MONITORING & ANALYTICS (OPTIONAL)
# =============================================================================

# Vercel Analytics
VERCEL_ANALYTICS_ID=your-vercel-analytics-id

# OpenTelemetry (for production monitoring)
OTEL_EXPORTER_OTLP_ENDPOINT=https://your-otel-endpoint.com
OTEL_EXPORTER_OTLP_HEADERS=authorization=Bearer your-otel-token

# =============================================================================
# DEVELOPMENT & TESTING
# =============================================================================

# Set to true when running Playwright tests
PLAYWRIGHT=false

# =============================================================================
# CONFIGURATION NOTES
# =============================================================================

# REQUIRED FOR BASIC FUNCTIONALITY:
# - AUTH_SECRET: For secure authentication
# - AI_GATEWAY_BASE_URL & AI_GATEWAY_API_KEY: For AI model access
# - POSTGRES_URL: For data persistence

# RECOMMENDED FOR PRODUCTION:
# - REDIS_URL: For advanced streaming features and session management
# - BLOB_READ_WRITE_TOKEN: For file upload functionality

# OPTIONAL INDIVIDUAL PROVIDER KEYS:
# - Only needed if bypassing the AI Gateway
# - Gateway approach is recommended for better reliability and routing

# GETTING STARTED:
# 1. Copy this file to .env.local
# 2. Fill in at minimum: AUTH_SECRET, AI_GATEWAY_*, and POSTGRES_URL
# 3. Add REDIS_URL for full functionality
# 4. Add BLOB_READ_WRITE_TOKEN for file uploads
# 5. Run: pnpm db:migrate to set up the database
# 6. Run: pnpm dev to start the development server

# PROVIDER SETUP GUIDES:
# - Neon (Database): https://neon.tech/
# - Upstash (Redis): https://upstash.com/
# - Vercel Blob (Storage): https://vercel.com/storage/blob
# - AI Gateway: Contact your AI Gateway provider for setup instructions
